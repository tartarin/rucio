#!/usr/bin/env python
# Copyright European Organization for Nuclear Research (CERN)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Authors:
# - Vincent Garonne, <vincent.garonne@cern.ch>, 2012-2013

"""
Reaper is a daemon to manage file deletion
"""

import argparse
import signal

from rucio.daemons.reaper import run, stop

if __name__ == "__main__":

    signal.signal(signal.SIGTERM, stop)

    parser = argparse.ArgumentParser()
    parser.add_argument("--run-once", action="store_true", default=False, help='One iteration only')
    parser.add_argument("--total-workers", action="store", default=1, type=int, help='Total number of workers per process')
    parser.add_argument("--threads-per-worker", action="store", default=None, type=int, help='Total number of threads created by each worker')
    parser.add_argument("--chunk-size", action="store", default=10, type=int, help='Chunk size')
    parser.add_argument("--scheme", action="store", default=None, type=str, help='Force the reaper to use a particular protocol, e.g., mock.')
    parser.add_argument('--greedy', action='store_true', default=False, help='Greedy mode')
    parser.add_argument('--exclude-rses', action="store", default=None, type=str, help='RSEs expression to exclude RSEs')
    parser.add_argument('--include-rses', action="store", default=None, type=str, help='RSEs expression to include RSEs')
    parser.add_argument('--rses', nargs='+', type=str, help='List of RSEs')
    parser.add_argument('--delay-seconds', action="store", default=3600, type=int, help='Delay to retry failed deletion')

    args = parser.parse_args()
    try:
        run(total_workers=args.total_workers, chunk_size=args.chunk_size, greedy=args.greedy,
            once=args.run_once, scheme=args.scheme, rses=args.rses, threads_per_worker=args.threads_per_worker,
            exclude_rses=args.exclude_rses, include_rses=args.include_rses, delay_seconds=args.delay_seconds)
    except KeyboardInterrupt:
        stop()
